# Nums = [ 0, 1, 0, 3, 4, 5, 6, 0] = Output = [ 1, 3, 4, 5, 6] = 5
# [ 0,  1,  0,  3,  4,  5,  6, 0] = [ 0, 0, 0, 1, 3, 4, 5, 6 ]
#                              |    = Output = [ 1, 3, 4, 5, 6] = 5
#                              L
#                              R 
# Move zeroes to left and return number of non-zero elements

class Solution(object):
  def moveZerosAndReturnNonZeros(self, nums):
    left = len(nums)-1
    right = len(nums)-1
    nonZeros = 0 # Keep track of the non zeros and increment it. 

    for num in nums:
      if num != 0:
        nonZeros +=1

    while left >=0:
      if nums[right] != 0:
        nums[right], nums[left] = nums[left], nums[right]
        left -=1
      

      right -=1 

    return nonZeros

test = [8, 0, 0, 0, 1, -3, 12, -1, 8]
test2 = [0, 1, 0, 3, 4, 5, 6, 0]

print(Solution().moveZerosAndReturnNonZeros(test))
print(Solution().moveZerosAndReturnNonZeros(test2))


